/* ===========================================================================================
██████  ██ ██    ██ ██ ██████  ███████ ██████  ███████
██   ██ ██ ██    ██ ██ ██   ██ ██      ██   ██ ██
██   ██ ██ ██    ██ ██ ██   ██ █████   ██████  ███████
██   ██ ██  ██  ██  ██ ██   ██ ██      ██   ██      ██
██████  ██   ████   ██ ██████  ███████ ██   ██ ███████
=========================================================================================== */
%hr,
hr {
  margin: 2rem auto;
  // max-width: 100%;
}

hr.lightest {
  border-color: $white-60;
}

hr.lighter {
  border-color: $white-30;
}

hr.light {
  border-color: $white-15;
}

hr.darkest {
  border-color: $black-60;
}

hr.darker {
  border-color: $black-30;
}

hr.dark {
  border-color: $black-15;
}

@each $color-name, $color in palette {
  hr.#{$color-name} {
    border-bottom-color: $color;
  }
}

.vertical-divider {
  border: 2px solid $blue;
}

.vertical-divider-left {
  border-width      : 2px;
  border-style      : solid;
  border-right-width: 0;
  border-image      : $blue;
}

.vertical-divider-right {
  border-width     : 2px;
  border-style     : solid;
  border-left-width: 0;
  border-image     : $blue;
}
/* ----  End of DIVIDERS  -------------------------------------------------------------------------- */

// ====================================================================================
// ███████ ██ ██████  ███████     ██      ██ ███    ██ ███████ ███████
// ██      ██ ██   ██ ██          ██      ██ ████   ██ ██      ██
// ███████ ██ ██   ██ █████       ██      ██ ██ ██  ██ █████   ███████
//      ██ ██ ██   ██ ██          ██      ██ ██  ██ ██ ██           ██
// ███████ ██ ██████  ███████     ███████ ██ ██   ████ ███████ ███████
// ====================================================================================
$sidelines-text-padding: 0.5em !default;
$sidelines-line-thickness: 1px !default;
$sidelines-line-length: 9999px !default;
$sidelines-line-color: null !default;
$sidelines-line-style: solid !default;
$sidelines-double-line: false !default;
$sidelines-double-line-spacing: 0.5em !default;
@mixin sidelines($text-padding: $sidelines-text-padding, $line-thickness: $sidelines-line-thickness, $line-length: $sidelines-line-length, $line-color: $sidelines-line-color, $line-style: $sidelines-line-style, $double-line: $sidelines-double-line, $double-line-spacing: $sidelines-double-line-spacing) {
  display    : block;
  overflow   : hidden;
  text-align : center;
  white-space: nowrap;

  span {
    position     : relative;
    display      : inline-block;
    padding-right: $text-padding;
    padding-left : $text-padding;

    &:after,
    &:before {
      position        : absolute;
      top             : 50%;
      width           : $line-length;
      height          : 100%;
      content         : '';

      border-top-width: $line-thickness;
      border-top-style: $line-style;
      @if $line-color != null {
        border-top-color: $line-color;
      }
      @if $double-line {
        height             : $double-line-spacing;
        margin-top         : -($double-line-spacing/2);
        border-bottom-width: $line-thickness;
        border-bottom-style: $line-style;
        border-bottom-color: $line-color;
      } @else 
      if $line-thickness > 1 {
        margin-top: -(floor($line-thickness/2));
      }
    }

    &:before {
      right: 100%;
    }

    &:after {
      left: 100%;
    }
  }
}

.type-sidelines {
  @include sidelines();
}

.double {
  @include sidelines($double-line: true);
}

.custom {
  @include sidelines($text-padding: 20px, $line-length: 100%, $line-color: $blue, $line-thickness: 4px, $line-style: dotted);
}

.custom-2 {
  @include sidelines($line-color: $blue, $line-thickness: 4px);
}
// -----  End of SIDE LINES  ---------------------------------------------
