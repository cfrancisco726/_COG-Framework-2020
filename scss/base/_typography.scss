// ===================================================================================
// ████████ ███████ ██   ██ ████████      ██████ ██████   ██████  ██████
//    ██    ██       ██ ██     ██        ██      ██   ██ ██    ██ ██   ██
//    ██    █████     ███      ██        ██      ██████  ██    ██ ██████
//    ██    ██       ██ ██     ██        ██      ██   ██ ██    ██ ██
//    ██    ███████ ██   ██    ██         ██████ ██   ██  ██████  ██
// ===================================================================================

@mixin text-crop($line-height: 1.3, $top-adjustment: 0px, $bottom-adjustment: 0) {
  // Configured in Step 1
  $top-crop           : 21;
  $bottom-crop        : 12;
  $crop-font-size     : 84;
  $crop-line-height   : 1.1;

  // Apply values to calculate em-based margins that work with any font size
  $dynamic-top-crop   : max(($top-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)), 0) / $crop-font-size;
  $dynamic-bottom-crop: max(($bottom-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)), 0) / $crop-font-size;

  // Mixin output
  line-height         : $line-height;

  &::after,
  &::before {
    content: '';
    display: block;
    height : 0;
    width  : 0;
  }

  &::before {
    margin-bottom: calc(-#{$dynamic-top-crop}em + #{$top-adjustment});
  }

  &::after {
    margin-top: calc(-#{$dynamic-bottom-crop}em + #{$bottom-adjustment});
  }
}
// Mixin generated at: http://text-crop.eightshapes.com/?typeface-selection=custom-font&typeface=Lato&custom-typeface-name=Cognizant%20Sans&custom-typeface-url=&custom-typeface-weight=400&custom-typeface-style=normal&weight-and-style=100&size=84&line-height=1.1&top-crop=21&bottom-crop=12

/* Usage Examples
    .my-level-1-heading-class {
        @include text-crop; // Will use default line height of 1.3
        font-size: 48px;
        margin: 0 0 0 16px;
    }

    .my-level-2-heading-class {
        @include text-crop; // Will use default line height of 1.3
        font-size: 32px; // Don't need to change any settings, will work with any font size automatically
        margin: 0 0 0 16px;
    }

    .my-body-copy-class {
        @include text-crop($line-height: 2); // Larger line height desired, set the line height via the mixin
        font-size: 16px;
    }

    // Sometimes depending on the font-size, the rendering, the browser, etc. you may need to tweak the output. 
    // You can adjust the top and bottom cropping when invoking the component using the $top-adjustment and $bottom-adjustment settings 
    
    .slight-adjustment-needed {
        @include text-crop($top-adjustment: -0.5px, $bottom-adjustment: 2px);
        font-size: 17px;
    }

    .dont-do-this {
        @include text-crop;
        font-size: 16px;
        line-height: 3; // DO NOT set line height outside of the mixin, the mixin needs the line height value to calculate the crop correctly
    }
*/

// -----  End of TEXT CROP  -----------------------------------

// ===================================================================================
// ████████ ██    ██ ██████   ██████   ██████  ██████   █████  ██████  ██   ██ ██    ██
//    ██     ██  ██  ██   ██ ██    ██ ██       ██   ██ ██   ██ ██   ██ ██   ██  ██  ██
//    ██      ████   ██████  ██    ██ ██   ███ ██████  ███████ ██████  ███████   ████
//    ██       ██    ██      ██    ██ ██    ██ ██   ██ ██   ██ ██      ██   ██    ██
//    ██       ██    ██       ██████   ██████  ██   ██ ██   ██ ██      ██   ██    ██
// ===================================================================================

// // https://gist.github.com/fsimmons/e9e64dc2f6f375dbe446c9994022299b
// $screen_min: 320px;
// $screen_max: 1330px;
// 
// @mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
//     @each $property in $properties {
//         #{$property}: $min-value;
//     }
// 
//     @media (min-width: $min-vw) {
//         @each $property in $properties {
//             #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
//         }
//     }
// 
//     @media (min-width: $max-vw) {
//         @each $property in $properties {
//             #{$property}: $max-value;
//         }
//     }
// }
// 
// // .text-large {
// //   @include fluid-type(font-size, $screen_min, $screen_max, 15px, 18px);
// //   @include fluid-type(line-height, $screen_min, $screen_max, 24px, 32px);
// // }

// // https://utopia.fyi/calculator?c=320,16,1.2,1200,20,1.333,5,2,
// :root {
//     --fluid-min-width: 320;
//     --fluid-max-width: 1200;
//     --fluid-min-size : 16;
//     --fluid-max-size : 20;
//     --fluid-min-ratio: 1.2;
//     --fluid-max-ratio: 1.333;
// 
//     --fluid-screen   : 100vw;
//     --fluid-bp       : calc((var(--fluid-screen) - ((var(--fluid-min-width) / 16) * 1rem)) / ((var(--fluid-max-width) / 16) - (var(--fluid-min-width) / 16)));
// }
// 
// @media screen and (min-width: 1200px) {
//     :root {
//         --fluid-screen: calc(var(--fluid-max-width) * 1px);
//     }
// }
// 
// :root {
//     --fluid-max-negative: (1 / var(--fluid-max-ratio) / var(--fluid-max-ratio));
//     --fluid-min-negative: (1 / var(--fluid-min-ratio) / var(--fluid-min-ratio));
// 
//     --fluid-min-scale--2: var(--fluid-min-scale--1) * var(--fluid-min-ratio) * var(--fluid-min-negative);
//     --fluid-max-scale--2: var(--fluid-max-scale--1) * var(--fluid-max-ratio) * var(--fluid-max-negative);
//     --fluid-min-size--2 : (var(--fluid-min-size) * var(--fluid-min-scale--2)) / 16;
//     --fluid-max-size--2 : (var(--fluid-max-size) * var(--fluid-max-scale--2)) / 16;
//     --step--2           : calc(((var(--fluid-min-size--2) * 1rem) + (var(--fluid-max-size--2) - var(--fluid-min-size--2)) * var(--fluid-bp)));
// 
//     --fluid-min-scale--1: var(--fluid-min-ratio) * var(--fluid-min-negative);
//     --fluid-max-scale--1: var(--fluid-max-ratio) * var(--fluid-max-negative);
//     --fluid-min-size--1 : (var(--fluid-min-size) * var(--fluid-min-scale--1)) / 16;
//     --fluid-max-size--1 : (var(--fluid-max-size) * var(--fluid-max-scale--1)) / 16;
//     --step--1           : calc(((var(--fluid-min-size--1) * 1rem) + (var(--fluid-max-size--1) - var(--fluid-min-size--1)) * var(--fluid-bp)));
// 
//     --fluid-min-scale-0 : var(--fluid-min-ratio);
//     --fluid-max-scale-0 : var(--fluid-max-ratio);
//     --fluid-min-size-0  : (var(--fluid-min-size)) / 16;
//     --fluid-max-size-0  : (var(--fluid-max-size)) / 16;
//     --step-0            : calc(((var(--fluid-min-size-0) * 1rem) + (var(--fluid-max-size-0) - var(--fluid-min-size-0)) * var(--fluid-bp)));
// 
//     --fluid-min-scale-1 : var(--fluid-min-scale-0) * var(--fluid-min-ratio);
//     --fluid-max-scale-1 : var(--fluid-max-scale-0) * var(--fluid-max-ratio);
//     --fluid-min-size-1  : (var(--fluid-min-size) * var(--fluid-min-scale-0)) / 16;
//     --fluid-max-size-1  : (var(--fluid-max-size) * var(--fluid-max-scale-0)) / 16;
//     --step-1            : calc(((var(--fluid-min-size-1) * 1rem) + (var(--fluid-max-size-1) - var(--fluid-min-size-1)) * var(--fluid-bp)));
// 
//     --fluid-min-scale-2 : var(--fluid-min-scale-1) * var(--fluid-min-ratio);
//     --fluid-max-scale-2 : var(--fluid-max-scale-1) * var(--fluid-max-ratio);
//     --fluid-min-size-2  : (var(--fluid-min-size) * var(--fluid-min-scale-1)) / 16;
//     --fluid-max-size-2  : (var(--fluid-max-size) * var(--fluid-max-scale-1)) / 16;
//     --step-2            : calc(((var(--fluid-min-size-2) * 1rem) + (var(--fluid-max-size-2) - var(--fluid-min-size-2)) * var(--fluid-bp)));
// 
//     --fluid-min-scale-3 : var(--fluid-min-scale-2) * var(--fluid-min-ratio);
//     --fluid-max-scale-3 : var(--fluid-max-scale-2) * var(--fluid-max-ratio);
//     --fluid-min-size-3  : (var(--fluid-min-size) * var(--fluid-min-scale-2)) / 16;
//     --fluid-max-size-3  : (var(--fluid-max-size) * var(--fluid-max-scale-2)) / 16;
//     --step-3            : calc(((var(--fluid-min-size-3) * 1rem) + (var(--fluid-max-size-3) - var(--fluid-min-size-3)) * var(--fluid-bp)));
// 
//     --fluid-min-scale-4 : var(--fluid-min-scale-3) * var(--fluid-min-ratio);
//     --fluid-max-scale-4 : var(--fluid-max-scale-3) * var(--fluid-max-ratio);
//     --fluid-min-size-4  : (var(--fluid-min-size) * var(--fluid-min-scale-3)) / 16;
//     --fluid-max-size-4  : (var(--fluid-max-size) * var(--fluid-max-scale-3)) / 16;
//     --step-4            : calc(((var(--fluid-min-size-4) * 1rem) + (var(--fluid-max-size-4) - var(--fluid-min-size-4)) * var(--fluid-bp)));
// 
//     --fluid-min-scale-5 : var(--fluid-min-scale-4) * var(--fluid-min-ratio);
//     --fluid-max-scale-5 : var(--fluid-max-scale-4) * var(--fluid-max-ratio);
//     --fluid-min-size-5  : (var(--fluid-min-size) * var(--fluid-min-scale-4)) / 16;
//     --fluid-max-size-5  : (var(--fluid-max-size) * var(--fluid-max-scale-4)) / 16;
//     --step-5            : calc(((var(--fluid-min-size-5) * 1rem) + (var(--fluid-max-size-5) - var(--fluid-min-size-5)) * var(--fluid-bp)));
// }

// ===================================================================================
// ██████  ███████ ███████
// ██   ██ ██      ██
// ██████  █████   ███████
// ██   ██ ██           ██
// ██   ██ ██      ███████
// ===================================================================================
// @import "../plugins/rfs";
// -----  End of RFS  -----------------------------------

.text-crop {
  // @include lhCrop(1.2, 0.75); //using Roboto font family
  @include text-crop;
}

// ===================================================================================
// ██████  ███████ ███████  █████  ██    ██ ██   ████████
// ██   ██ ██      ██      ██   ██ ██    ██ ██      ██
// ██   ██ █████   █████   ███████ ██    ██ ██      ██
// ██   ██ ██      ██      ██   ██ ██    ██ ██      ██
// ██████  ███████ ██      ██   ██  ██████  ███████ ██
// ===================================================================================
$tiny-font-size: 60%;

body {
  font-size: var(--step-0);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--blue);
  // @include text-crop;
}

%h1,
.h1,
h1 {
  // @include font-size(84px);
  // font-size     : var(--step-5);
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 36px, 84px);
  @include fluidSize(line-height, 320px, $cog-bp--desktop-xl, 1, 1.1);
  // line-height   : 1.1;
  letter-spacing: -1px;
}

%h2,
.h2,
h2 {
  // @include font-size(63px);
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 32px, 63px);
  @include fluidSize(line-height, 320px, $cog-bp--desktop-xl, 1, 1.1);
  // font-size  : var(--step-4);
  // line-height: 1.1;
}

%h3,
.h3,
h3 {
  // @include font-size(47px);
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 28px, 47px);
  // font-size: var(--step-3);
}

%h4,
.h4,
h4 {
  // @include font-size(36px);
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 25px, 36px);
  // font-size: var(--step-2);

}

%h5,
.h5,
h5 {
  // @include font-size(27px);
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 22px, 27px);
  // font-size: var(--step-1);
}

%h6,
.h6,
h6 {
  // @include font-size(20px);
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 20px, 20px);
  // font-size: var(--step-0);
}

%p,
p {
  // @include font-size(20px);
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 16px, 20px);
  // font-size: var(--step-0);

  + p {
    // margin-bottom: 0;
  }

  a {
    // margin-bottom: $paragraph-margin-bottom;
  }
}

.super-size {
  // @include font-size(140px);
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 48px, 140px);
  @include fluidSize(line-height, 320px, $cog-bp--desktop-xl, 1, 1.1);
}

%small,
.small {
  // font-size: $small-font-size;
  // @include font-size(16px);
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 12px, 15px);
}

%tiny,
.tiny {
  // font-size: 60%;
  // @include font-size(12px);
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 9px, 12px);
}

$font-sizes: (
  tiny,
  small,
  normal
);

@each $size in $breakpoint-classes {
  @include breakpoint($size) {
    @each $font-size in $font-sizes {
      .#{$size}-#{$font-size} {
        extend: #{font-size}!important;
      }
    }
  }
}

// $font-size-percents: 20;
// @for $i from 1 through $font-size-percents {
//     .fs-#{$i*10}pct {
//         font-size: percentage($i/10);
//     }
// }

sup {
  // top      : -0.4em;
  // font-size: $tiny-font-size;
}

// ===================================================================================
// ██    ██ ████████ ██ ██      ██ ████████ ██ ███████ ███████
// ██    ██    ██    ██ ██      ██    ██    ██ ██      ██
// ██    ██    ██    ██ ██      ██    ██    ██ █████   ███████
// ██    ██    ██    ██ ██      ██    ██    ██ ██           ██
//  ██████     ██    ██ ███████ ██    ██    ██ ███████ ███████
// ===================================================================================
.lh0 {
  line-height: 0;
}

.lh1 {
  line-height: 1;
}

.lh2 {
  line-height: 2;
}

%text-normal,
.text-normal {
  font-weight: normal !important;
}

%text-light,
.text-light {
  font-weight: 100 !important;
}

%text-light-italic,
.text-light-italic {
  font-weight: 100 !important;
  font-style : italic;
}

%text-bold,
.strong,
.text-bold,
strong {
  font-weight: bold !important;
}

%text-bold-italic,
.text-bold-italic {
  font-weight: bold !important;
  font-style : italic;
}

%text-heavy,
.strong,
.text-heavy,
strong {
  font-weight: 900 !important;
}

%text-heavy-italic,
.text-heavy-italic {
  font-weight: 900 !important;
  font-style : italic;
}

%text-italic,
.text-italic {
  font-style: italic !important;
}

%text-caps,
.text-caps {
  text-transform: uppercase !important;
}

%text-title,
.text-title {
  text-transform: capitalize !important;
}

%text-sentence,
.text-sentence {
  text-transform: none !important;
}

%text-center {
  text-align: center;
}

/* ===========================================================================================

██      ██ ███    ██ ██   ██ ███████
██      ██ ████   ██ ██  ██  ██
██      ██ ██ ██  ██ █████   ███████
██      ██ ██  ██ ██ ██  ██       ██
███████ ██ ██   ████ ██   ██ ███████

=========================================================================================== */
a,
a:link {
  font-weight: $global-weight-bold;

  &:last-of-type {
    margin-bottom: 0;
  }

  & ~ a,
  & ~ a:link {
    margin: $button-margin;
  }
}

a.link-coverAll:before {
  content : '';
  position: absolute;
  left    : 0;
  top     : 0;
  right   : 0;
  bottom  : 0;
}

/* ----  End of LINKS  -------------------------------------------------------------------------- */

// =============================================================================================
// ████████ ███████ ██   ██ ████████      ██████  ██████  ██       ██████  ██████  ███████
//    ██    ██       ██ ██     ██        ██      ██    ██ ██      ██    ██ ██   ██ ██
//    ██    █████     ███      ██        ██      ██    ██ ██      ██    ██ ██████  ███████
//    ██    ██       ██ ██     ██        ██      ██    ██ ██      ██    ██ ██   ██      ██
//    ██    ███████ ██   ██    ██         ██████  ██████  ███████  ██████  ██   ██ ███████
// =============================================================================================
@each $size in $breakpoint-classes {
  @include breakpoint($size) {
    @each $color-name, $color in $cog-color-palette {
      @if $size != $-zf-zero-breakpoint {
        .#{$size}-text-#{$color-name} {
          color: $color !important;
        }
      } @else {
        .text-#{$color-name} {
          color: $color !important;
        }
      }
    }
  }
}

.text-white {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  li,
  p {
    color: $white !important;
  }
}

.text-wrap {
  white-space: normal;
}

.text-nowrap {
  white-space: nowrap;
}

.hanging-punctuation {
  text-indent: -0.5em;
}

.gradient-transparent-white-25 {
  background: linear-gradient(to right, rgba($white,0), rgba($white,1) 25%);
}

.gradient-transparent-black-25 {
  background: linear-gradient(to right, rgba($black,0), rgba($black,1) 25%);
}

.heading-lines {
  overflow  : hidden;
  text-align: center;
}

.heading-lines:after,
.heading-lines:before {
  position        : relative;
  display         : inline-block;
  width           : 50%;
  height          : 1px;
  content         : "";
  vertical-align  : middle;
  background-color: $black-30;
}

.heading-lines:before {
  right      : 0.5em;
  margin-left: -50%;
}

.heading-lines:after {
  left        : 0.5em;
  margin-right: -50%;
}
/* ----  End of TYPOGRAPHY;  -------------------------------------------------------------------------- */

/* ====================================================================================

██████  ██       ██████   ██████ ██   ██  ██████  ██    ██  ██████  ████████ ███████ ███████
██   ██ ██      ██    ██ ██      ██  ██  ██    ██ ██    ██ ██    ██    ██    ██      ██
██████  ██      ██    ██ ██      █████   ██    ██ ██    ██ ██    ██    ██    █████   ███████
██   ██ ██      ██    ██ ██      ██  ██  ██ ▄▄ ██ ██    ██ ██    ██    ██    ██           ██
██████  ███████  ██████   ██████ ██   ██  ██████   ██████   ██████     ██    ███████ ███████
                                             ▀▀
==================================================================================== */
blockquote {
  padding     : 3.75rem 0;
  text-align  : center;
  color       : $blue-medium;
  border      : 1px solid $blue-light;
  border-right: 0;
  border-left : 0;
  font-weight : bold;
  font-style  : italic;

  @extend %h5;

  %cite,
  cite {
    margin-top : 1.875rem;
    font-weight: normal;
    color      : $gray-dark;
  }
}

/* -----  End of BLOCKQUOTES  --------------------------------------------- */

/* ==================================================================================================
██      ██ ███████ ████████ ███████
██      ██ ██         ██    ██
██      ██ ███████    ██    ███████
██      ██      ██    ██         ██
███████ ██ ███████    ██    ███████
========================================================================================= */
ul {
  margin-bottom: 2rem;
}

li {
  margin-bottom: 1rem;
}

li:last-child {
  // margin-bottom: 0;
}

li ol,
li ul {
  margin-top: 1rem;
}
@include breakpoint(medium up) {
  ul.inline-list li {
    display: inline-block;
    margin : 0 1rem 0 0;
  }
}

ul.circle {
  list-style-type: circle;
}

ul.square {
  list-style-type: square;
}

dl dt {
  margin-top : 1rem;
  font-weight: bold;
}
/* ----  End of LISTS  --------------------------------------------------------------------- */
/* =================================================================================================
██      ██ ███    ██ ██   ██
██      ██ ████   ██ ██  ██
██      ██ ██ ██  ██ █████
██      ██ ██  ██ ██ ██  ██
███████ ██ ██   ████ ██   ██
██      ██ ███████ ████████ ███████
██      ██ ██         ██    ██
██      ██ ███████    ██    ███████
██      ██      ██    ██         ██
███████ ██ ███████    ██    ███████
========================================================================================= */
.arrow {
  display    : inline-flex;
  align-items: center;

  &::after {
    position   : unset !important;
    right      : unset !important;
    width      : unset !important;
    height     : unset !important;
    margin-top : unset !important;
    margin-left: 0.5rem;
    content    : "\e907" !important;
    background : unset !important;
    font-family: "Cognizant-Icons";
    font-weight: bold;
  }

  &.arrow-solid-green {
    &::after {
      content    : "\e908" !important;
      color      : $green;
      font-family: "Cognizant-Icons";
    }
  }
}

.arrow-end {
  // position: relative;

  &::after {
    // position   : absolute;
    // right      : 0;
    content    : "\e907";
    font-family: "Cognizant-Icons";
    display    : inline;
    margin-left: 0.2rem;
  }
}

/* ----  End of LINK LISTS  --------------------------------------------------------------------- */

/* ====================================================================================

████████ ███████ ██   ██ ████████     ███████ ██   ██  █████  ██████   ██████  ██     ██
   ██    ██       ██ ██     ██        ██      ██   ██ ██   ██ ██   ██ ██    ██ ██     ██
   ██    █████     ███      ██        ███████ ███████ ███████ ██   ██ ██    ██ ██  █  ██
   ██    ██       ██ ██     ██             ██ ██   ██ ██   ██ ██   ██ ██    ██ ██ ███ ██
   ██    ███████ ██   ██    ██        ███████ ██   ██ ██   ██ ██████   ██████   ███ ███

==================================================================================== */
.text-shadow {
  text-shadow: 0 0 3rem rgba($black,.65);
}
// -----  End of TEXT SHADOW  ---------------------------------------------
